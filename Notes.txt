 React JS 
+++++++++++++++++++++++++++++++++++++++++++++

Savitha Ramesh
9+ years of Experience fullstack developer 

Application 

what is front-end?
   
   User Interaction(user interface) end-user perspective it is user interface whereas from developer perspective
  it will be an interface design 

what is back-end?

  refers to the server side development mainly deals with databases,scripts and architecture 

what is full-stack?

  full stack comprises both front-end and back-end together with deployments

--------------------------------------------------------------------------------------------------------

Pre-requisites to learn React JS

  -> we need basics of HTML , CSS 
  -> basics of javascript 

   Course Content 
-----------------------------------------------------------------
  Learn Javascript and React JS

  Topics covered in this course is as follows 

  1) HTML , CSS
  2) Javascript => let & const , callbacks, prototype ajax , export ,import, objects,arrays
  3) React Introduction
  4) Environment setup 
  5) Essentials
  6) States and Props
  7) React Hooks
  8) Router and Forms
  9) Styling in React JS 
  10) Redux
  11) Important Topics
  12) Integrations 
  13) Real Time Project using React JS 


  Course duration: 45 days 
  class : Mon  - Sat 
  Time : 7:30 pm - 8:30 pm (1.5 hrs)


  Advantages with Ashok IT
  +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

  1) Live Online Training 
  2) Soft Copy Material 
  3) Doubts Clarification
  4) Back up Videos => 1 year access
  5) Telegram group for communication 
  6) Resume Preparations
  7) Placement assistance 

   +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

  you can check the complete the details of this course on ashok it website

  https://www.ashokitech.com/react-js-online-training

  
  What is React JS?

     react js is a javascript library for building user interfaces . React is the most popular front end development tool which is currently in use 

  why React JS / advantages of React JS

  -> Easy to write the code and light weight 
  -> Reusable Component based
     ex: Login Component 
          users : students,employees , agents 
          Generic Component Login can be re-used for all type of users
  -> Design Simple views 
  -> Not too hard to learn 
  -> React makes it painless to create interactive UI's

   what is the demand for react JS?

      React js is one of the most demanded in market
      some of the tech companies like netflix,paypal and facebook 

  what is the demand for job oppurtunities ? 

   Naukri.com(73542) 
------------------------------------------------------------------------------------------------------------
  
  HTML => Hyper text Mark up Language (mark the content as text: bold italic ) 

  => tags 

  => HTML was invented by Sir Tim Berners Lee in late 1991
  => HTML is used to develop static web pages 
  => It can saved with ".html" or ".htm" extension 

    why to learn HTML?

    -> create a website
    -> become a web designer 
    -> master other front-end technologies like javascript,angular, react , vue etc 

    IDE => Microsoft Visual Studio Code => Microsoft , Open Source 

    Online Editors
    Offline Editors 
    IDE => VS Code 

    https://code.visualstudio.com/Download

    how can we execute HTML? 

    With the help of Browsers: Google Chrome, IE(edge) , Mozilla , Opera 

    https://www.w3schools.com/html/html_examples.asp
    https://www.w3schools.com/html/html_quiz.asp

    Change/Add the default styles using CSS => Cascading Style Sheets

   font-size, width , color 

   Background Color, Border, Margins , Padding 
 
   <html> <head> </head><body>

   https://www.w3schools.com/Css/
   https://www.w3schools.com/Css/css_quiz.asp 

   Assignment 1 => Profiler Page 

   how can we make the web pages dynamic?

   we have a scripting language called javascript used to convert static content to dynamic content 

   =========================================================================================================

  Javascript is a programming scripting language which we can use to develop any type of web application
    Web Development  . Client Side scripting language

    Script => which executes in browser (function / program which gives output ) 

    LiveScript => initial version

      Java programming language was becoming popular 

    JavaScript => renamed as javascript 

   
    1. Editors / Notepad++ IDE 
        Sublime Text 
        Atom
        Brackets
        webstorm 
        VS Code(recommended) Auto Save , Live Server Extension

    2. Each and every browser will have its own javascript engine 

       Ways to write javascript code 
      1. <script></script>
      2. External file and then include that as path of the script tag  


    3. remove the overhead of saving the file using Auto Save option in VS Code

    4. remove the overhead of refreshing the browser by using live-server option

    
    which is the best place to put javascript code?
     => in body placing the javascript code
	 
	 ==============================02-05-2023====================================

    Javascript Variables and data types 
    ----------------------------------------------------------------------------------------

    Variable is a named storage for data 

    Variables are used to store the information 

    Rules to follow while making use of variables 

    1. Variable name should contain only letter,digits,symbols($) and (_)underscore 
    2. First character must not be the digits 
    3. Variable Names should be in camelCase 

    let firstname;  //valid
    let FIrstname;  //valid
    let firstNAME;  //valid
    let first_name: //valid 

    let firstName; // camelCase is always preferred 

    Declaring the Variable 
   
    let message ; //declaration 
    message = "Javascript" // initialization 

    let message = "Javascript" 

    let user = "kumar", age=32, message="Javascript" ; //100% valid 

    let user = "Kumar";
    let age = 32;
    let message = "Javascript"
   
    let $ = 3; // valid
    let my_name ; // valid
    let _ = 2; // valid
    let 1a=4; // invalid violating Rule No 2

   4. Variable Names are Case Sensitive

      let apple;   // both are not same in javascript 
      let aPple;

   5. Should not use keywords/reserved words 

      let let=10; // error 
      https://www.w3schools.com/js/js_reserved.asp

     Exercise : 
         Assignment1
  
		  /*
		Mark and John are trying to compare their BMI (Body Mass Index), 
		which is calculated using the formula: 
		BMI = mass / height ** 2 = mass / (height * height). 
		(mass in kg and height in meter).
		1. Store Mark's and John's mass and height in variables
		2. Calculate both their BMIs using the formula (you can even implement
		both versions)
		3. Create a boolean variable 'markHigherBMI' containing information
		about whether Mark has a higher BMI than John.
		TEST DATA 1: Marks weights 78 kg and is 1.69 m tall. John weights 92 kg
		and is 1.95 m tall.
		TEST DATA 2: Marks weights 95 kg and is 1.88 m tall.
		John weights 85 kg and is 1.76 m tall.
		GOOD LUCK ðŸ˜€
		*/ 
		
		//step 1 	
		let heightMark = 1.69 
		let heightJohn = 1.95
		let massJohn = 92
        let massMark = 78 

        //step2 
        let BMIMark = massMark/heightMark ** 2;
		let BMIJohn = massJohn/(heightJohn*heightJohn);
		
		let markHigherBMI = BMIMark > BMIJohn;
		
		console.log("Higher BMI------------",markHigherBMI);
         		
		
		
		Data Types
		----------------------------------------------------------------------------
		
		let message = "Javascript"; // string 
		    message = 10 ;
		
		Javascript is a dynamically typed language 
		
		10+10 = 20
		10+"10" = "1010"
		
		1. Number type
		   let n = 123 ;
		   let m = 123.45;
		    typeof n => number , typeof m => number
			typeof typeof n => string 
			
	    2. BigInt
		   2^53-1 and -(2^53-1) this is a range bound 
		   limitations of number 
		   let n = 78654341234724313465564545n;
		
		3.string 
		  let a = "hello";
		  let b = 'hello';
		  let c = `hello`; //template string literal 
		  
		4. Boolean 
		true or false
		if(10>1){ }
		
		5. undefined 
		   In javascript you declare a variable and not assign any value then it will 
		   hold undefined it.
		   let a;
		   console.log(a);
		   
		6. null 
		   let a = null;
		   in javascript null means "reference to non existing object "
		   typeof a => object 
		   
		   let a = 10;
		    a = "string " 
			let a ;
			 a = null;  a = {} ;
			 
			 a=null;  // clearing
			 
			 a= 20; //assigning
			 
			 a = "string";
			 
			 a= ""; // re-assigning 
			 
			 a=null; // clearing 
			 
	 ==============================03-05-2023======================================
	 
	       Data type used to store single value are known as Primitive data types 
		   Data types are used to store multiple values are known as Non Primitive Data types
	 
	      Object, Arrays
		  
		  Objects => Collection of various data types (stores the data in key value pair)
		  
		 
		    let userObj = {
				name : "savitha",
				age : 28,
				id : 1234
			}
			
			 what are the ways to declare an object?
			 
		 1. let user = new Object(); // object constructor syntax 
         2. let user = {}; // object literal syntax	

            delete operator can be used only to delete property of an object 

            reserved words can be added as key/property to objects as it adds a seperate meaning	

======================================================================================================
            04-05-2023
			
            GIT => 	is a version control system 
                    helps you to keep track of code changes 

            https://github.com/
			
            https://git-scm.com/downloads
			
            1. Created a git account 

            2. Created a public Repository			

            3. git clone https://github.com/RuthvikSai2015/ReactJsSession4.git
			
			   created one file README.md
			   
			  git diff 
			   Author : 
			   SR Id: 
			   Changes :
			
			4. git add .
			
			5. git commit -m "first commit" // local
			
			6. git push -u origin main
			
			7. git pull 
			
			https://github.com/RuthvikSai2015/ReactJSSession3
			
			 Author : 
			 SR Id: 
			 Changes :
			 
========================================================================================
            05-05-2023
			
			Arrays => Collection of elements 
			          are used to store ordered collection of data 
					  
		    ways to declare an Array 
			1. let arr = new Array(); 
			2. let arr = [] ;  
			
			greatest numeric index + 1 
			
			Assignment2: Execute the Array Methods 
		    https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array
			
			let arr = [];
			    arr[123]="apple"
				console.log(arr.length); // 124 , 124
				
-------------------------08-05-2023-----------------------------------------------

            Diff between == and === ?
			
			    == value compared
				=== value and type is compared 
				
			type coercion => converting value from one type to other 
			
			  1 == "1"  => true => type coercion 
			  1 === "1" => false => not do type coercion just check with data type
			  
			  1 === "2" => false 
			  
	    Q. how do you make an array empty ?
		     arr.length = 0; 
			 arr = [];
			  
    ------------------------------------------------------------------------
	
	          Javascript functions 
			  
		  => functions are the building blocks
		      Allow not to repeat the code 
			  
			   Trying to book a flight => bookFlight(flightId,name,timing,src,desc) 
			   
			   One function one task 
			   
			  Diff btw Function Declaration and Function Expression 
			  
			  => with  function declaration calling is possible without declaration
			  => with function expression calling is not possible without declaring it 
			  
		   => Conditional Statements
              let age = 30 ;
              if(age > 70) {
                     //senior citizen benefit
                 }else{
                     //some other benefit
                }			
				
             truthy and falsy values 	
			  NaN that is not a legal number 
			     if(" "){}else{}
                 if(0){
                     // 1
                  } else {
				     //2
				  }		
                 0 means false 

                0, NaN , undefined , false 	

         https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions#:~:text=Broadly%20speaking%2C%20JavaScript%20has%20four%20kinds%20of%20functions%3A,be%20paused%20and%20resumed%20with%20the%20await%20operator				
			
--------------------------09-05-2023-----------------------------------------

           if () {
             } else if () {}	
			  else if () {}
			  else if () {}
              else if () {}
              else if () {}
              else if () {}
              else if () {}
              else if () {}
              else if () {}
              }		
           
           	 switch statements   => used to select one of many code blocks to be executed
			 
			 switch( new Date().getDay()){
			 
			 case 0:
			     day = "Sunday";
				 break;
			  case 1:
			     day = "Monday";
				 break;
			  case 2;
			     day = "Tuesday";
				 break;
			  case 2;
			     day = "Tuesday";
				 break;
			  case 2;
			     day = "Tuesday";
				 break;
			  case 2;
			     day = "Tuesday";
				 break;
			  case 2;
			     day = "Tuesday";
				 break;
				 
	    Loops :
		       loops are a way to repeat the same code number of times 
			   
			   sum()
			   sum()
			   sum()
			   sum()
			   sum()
			   
			   // loop = 5  {
			   
			        sum()
					
				 }
				 
			 while and for loops 
			   
		     Objects for .. in loop
			 Arrays for .. of loop
			  
			  
			  Assignment : 3 construct an object and array of objects
			  https://jsoneditoronline.org/#right=local.qokili&left=local.ticoyus
			  
	-----------------------------10-05-2023--------------------------------------------
	       
		   https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object
			 
			 Diff btw Let , Var and Const 
			 
			   let a;
			   var a;
			   const a;
			   
			  In terms of 
			  
			  1. Hoisting
			  2. Scope/Memory
			  3. Redeclaration/ Updation 
			  
			  Hoisting means it is a mechanism where it moves the variable/function 
			  declaration to the top of its nearest scope 
			  
			   console.log(a);
			   var a = 10;
			  
			  Internally 
			  
			  var a;
			  console.log(a);//nearest scope
			  a = 10 ;
	          
			  with let hoisting will not work 
			  with const hoisting will not work 
			  
			  ES6 let and const were introduced to reduce the bugs at run time 
			  
			  const ORG_NAME = 'AshokIT'; // let 
			  const birthYear = 1993; //const is preferred 
			  
			  2. Scope/Memory 
			  
			    var is a function level scope 
				let/const are block level scope { }
			  
			  var scope will be available throught the function 
			  let means block level scope only in that block it will be visible
			  
			  should i go with let or var ?
			  done with code why to hold the memory ?
			  we should go with let 
			  
			  3. Redeclaration / Updation 
			  
			    var supports redeclaration and  updation 
				
				let supports only updation 
				
				with const no redeclaration / updation 
				
===========================11-05-2023==========================================
                Destructuring of Objects and Array 
				
				Extracting the property from an object and assigning them to variable
				
				let user = {
				      name : "akash",  // name = akash
					  age : 28         // age = 28
					  email : "akash@gmail.com" // email = akash@gmail.com
				}
				
				1. user.name 
				
				2. user.name 
				10 times user.name 
				
				user.name into one variable called name ;
				
				const { name , age , email } = user;
				
				key and variable names should match 
				
				while destructuring we have the ability to give default values 
				
				//default value
				
				const { name,mobileNumber="123456789"} = user; 
				
				//ternary operator 
				
				const varName = condition ? "if true will execute " : "if false will execute"
				
                // alias Names 
				
				const { name } = user ;
				
				const name = "savitha"; 
				
				{ name:aliasName }
				const { name:firstName } = user; // adding alias
				
				Task:
				// destructure user.address.location.lat
				              user.address.location.long
				let user = {
				name : "akash",  // name = akash
				age : 28 ,      // age = 28
				email : "akash@gmail.com", // email = akash@gmail.com
				mobileNumber : "987654321",
				address : {
						   city:"bangalore",
						   place:"k r puram",
						   pincode:560049,
						   location :{ lat:123456,
										long:456783
						   }
				    }
			   }
                
			   Arrays Destructuring 
			   
			   
				let arr = ["ramesh","kumar","123","456","567","789"];

				let [firstName,lastName,...numbers] = arr;

				console.log(firstName);
				console.log(lastName);
				console.log(numbers);
			
====================12-05-2023==============================================

             Optional Chaining 
			 
			 console.log(johnData?.address?.city);  
			 
			 Arrow Functions
			 Map and Filter 
			 Scope
			 Imports and Exports 
			 Debugging of Javascript 
			 
			 Arrow Functions
			 function functionName(a1,a2....an){
			    //function body 
			 }
			 
			 let sum = function(a,b){
			    return a+b ;
			 }
			 sum()
			 
			 // Map and filter functions 
			 
			 const numbers = [1,2,3,4]
			 
			 Map => iterate over each and every element in the array 
			         perform some transformation or computation 
					 
				[1,2,3,4] = [2,4,6,8]
				
		     map returns array always 
			 
===============================15-05-2023========================================

            Filter Method 
			
			 works on array . you want to filter the data ,you need apply the condition on 
			 each and every element 
			 
			 https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter
			 
			 Debugging in Javascript 
			 
			1. console.log()
			   console.assert(exp,message); //only error occurs it will be printed 

            2. debugger; // keyword used to stop execution 

            3. Browser breakpoint 

            4. Conditional Breakpoint 	
                Right Click => Add a conditional break point 			
			 
	---------------------------------------------------------------------------		 
			 
			Scope => Visibility of an element 
			
			Local Scope => { } //limited
			Global Scope => it is accessible all over my program 
			
	--------------------16-05-2023----------------------------------
	
	        Callbacks 
			 are used to achieve asynchronous way of programming 
			 
			A callback is a function that is passed as an argument to another function 
			
			  to be "called back" at a later time(exception,deadlock,successful)
			  
			Import and Export => ES6 Concept 
			
			=> They allow you to create speerate and reusable components
			=> Export allows you to export a module to be used in another javascript program
			=> we can use import to import that module to use it in our component 
			
====================React JS ===================================

           what is React JS ?
		     ReactJs is a javascript library used to develop apps
			 
			 why reactjs was invented?
			    one change only that particular portion of the page has to be refreshed
				not whole page 
				
		    Component Based Architecture 
			
			1) Reusability
			2) Identify Bugs
			3) Easy to Maintain 			
			
			-----------------17-05-2023-------------------------------------------
			
			https://react.dev/learn
			
			Virtual DOM is a strategy to compute minimal DOM Operations when 
			re-rendering the user interface .
			
			Project setup 
			
			1) live server 
			2) live reload 
			3) babel transpiler (js engine) 
			
			CLI -> Command line interface 
			     everything will be taken care with single run command
				 
			=> npx create-react-app project-name
			
			1. Node js should be downloaded and installed (LTS )
			    https://nodejs.org/en 
				
				npm -> node package manager -> used to maintain the dependencies and it will consume the space in local 
				npx -> node package executable -> execute the command only once and it will not install in your local 
			
			  => node -v
			  => npm -v 
			  
			  npm -g create-react-app project-name 
			  
			  npx create-react-app sampleapp
			  
			   ES7 React/Redux/GraphQL/React-Native snippet -> Extension should be enables
			   
	--------------------------------------18-05-2023----------------------------------------
	
	        Zero configuration 
			
			1) Dev Server
			2) Live Reloading
			3) Babel
			4) Webpack (bundle our code) Ready to deploy production build
			   npm run build 
			
			  npm start 
			  
			  Browser can only understand HTML , CSS and Javascript (JS Engine) 
			  
			  Now how browser will understand react js? 
			  
			  Babel Transpiler (convert your react to javascript)
			  Transpiling the code (Translation) 
			  
			  Babel Transpiler comes default with React app
			  
			  1. index.html under public folder 
			     all our code in reactjs will go inside this
				 
			  2. index.js 
			  
	-------------------------------------19-05-2023-------------------------------
			    Virtual DOM 
				
				React Dom will insert our changes into DOM 
				
				why we have React DOM and React js library?
				
				React js is a basic librray for developing react applications
				
				React DOM is used to inject changes into Virtual DOM 
				
				Naming Conventions 
				
				1) Button.js Button.css Button.test.js
				
				2)index.js index.css
				
				
			App.js => html ? is this valid? 
			
			JSX => Javascript + XML
			
			  JSX helps us to convert html elements into react component 

             Components naming should start with capital letter 
             Normal Html elements will be in smaller case		

            without jsx can we write react components?		

            import logo from './logo.svg';
			import './App.css';
			function App() {
			  return /*#__PURE__*/React.createElement("div", {
				className: "App"
			  }, /*#__PURE__*/React.createElement("header", {
				className: "App-header"
			  }, /*#__PURE__*/React.createElement("img", {
				src: logo,
				className: "App-logo",
				alt: "logo"
			  }), /*#__PURE__*/React.createElement("p", null, "Edit ", /*#__PURE__*/React.createElement("code", null, "src/App.js"), " React js"), /*#__PURE__*/React.createElement("a", {
				className: "App-link",
				href: "https://reactjs.org",
				target: "_blank",
				rel: "noopener noreferrer"
			  }, "Learn React")));
			}
			export default App;			
			
			
			React.createElement("div",{},"");
			React.createElement("p",{},"");
			React.createElement("a",{},"");
			React.createElement("span",{},"");
			
		-> Creating a Component 
		
		   To call a function as a component it should return JSX 
		   
		   React Fragments => save the memory and space of dom 
		   
		   1) import React from 'react'
		       <React.Fragment> </React.Fragment>
			   
		   2) import {Fragment} from 'react ' 
		     <Fragment>  </Fragment>
				
		   3)  <> </>
		   
---------------------------22-05-2023----------------------------

           Dependencies     => The project completely depends on this part,
		                       react and react dom is a dependency
		   
		   Dev Dependencies => developer wants some flexibility 
		                       intendation , some plugins are required
				               Ex: Prettier format the code   
							       Unit testing also dev dependency 
								   
			 npm install --save lodash => dependencies 
			 
			 npm install --save -D lodash
			  -D dev dependency 
			  
			 npm i -D moment
			 
			 your deployment env(system)  has 16 and project is 18
			 
			     18 one hook was introduced? will it work in 16 ? no 
				 
			 1) will the project work ? yes / no 
			    yes how ? 
				no how? no 
			    18 some features may be removed/added
				16 // error 
				
			 2) check the compatibility 
			 3) encounter some errors match the version 
			 
	         React Props 
			 
			  Props stands for properties 
			  they are equal to function parameters 
			  
			  {props.age} conditions => {undefined}{null}{true}{false} 
			  
-----------------------24-05-2023-------------------------------------

			  Assignment React Props 
			  
			  => Investigate Falsy values 
			  
			1. Props are special keyword of reactjs
			2. The default value is true 
			3. we can pass any data as props value 
			4. we cannot use objects,arrays directly inside the component jsx 
			5. When passing numbers , expressions , variables try to use {}
			6. If we are not passing all props we will not get any error 
			7. we can pass default values {name,email,hobbies="reading"} in destructuring 
			8. Parent Component is going to communicate to child component (one way)
			9. more than 5 props . we need to do object destructuring (recommended) 
			
			Assignment 2: 
			
			Display the Objects,Arrays  passed as props 
			
			Destructuring of object
			
			let user = { name: "savitha",
               email: "savitha@gmail.com",
               hobbies: "singing,collecting stamps" 
              }; 
			  
			  const {name,email,hobbies} = user;
			  
			  props.user ;
			  
			  {props.user.name}
			  {props.user.email}
			  {props.user.hobbies}
			  
			    let user = { name: "savitha",
                             email: "savitha@gmail.com",
                             hobbies: "singing,collecting stamps" 
                           };
			  
               const {name,email,hobbies} = user;
			   
			   //name = {user.name} email = {user.email} hobbies={user.hobbies} 
			   
			     {props.user.name}
			     {props.user.email}
			     {props.user.hobbies}
			   
			   const {name,email,hobbies} = user;
			   
			   Props are read only 
			   
			   Pure Functions in React => dont modify the props values 
			   
	-----------------------25-05-2023------------------------------------------------------
			 
               Conditional Rendering 	

               CR means ability to render different UI Component based on true or 
                  false components 
				  
				ternary Operator 
				
				condition/exp ? "if it is true this part will get executed " :
				" if it is false this part will execute"
				
				for situation where there are 2 expected outcomes go for ternary operator
				
				for situation where there is only one expected outcome 
				  shortcut logical operator

				  true && false  
				  true && true
				  false && false
				  false && true 
				  
-------------------------29-05-2023-------------------------------------------

             React Event Handling 
			 
			 <button onclick="buttonClick()">
			   button text
			 </button>
			 
			 https://www.w3schools.com/jsref/dom_obj_event.asp
			 
			
			 1. React Event Names should be in camelCase rather than lowercase
                 <button onClick="buttonClicked()" >
			       Button text
			     </button>
			 			 
			 2. Should not mention in "" , we need to put in {} 
			 
			    <button onClick={buttonClicked()} >
				
			 3. We should not mention () 
			 
			     <button onClick={buttonClicked} >
				 
			Task : try out all the events 
			
			() => react will execute by default 
			
			click the button => onClick = {undefined}
			
			function sample(){
			
			}
			const data = sample()
            data => undefined 	

			
			Selectors in CSS 
			
			1. Tag based h1,h2 ,h3 ,h4
			
			2. Id selectors
			   #header1{
			    color:red
			   }

            3. Class Selectors 	
			   .cls-1

             className was introduced in react to avoid the confusion btw 
             class components in react 	
			 
------------------------------30-05-2023-------------------------------------------------

            React List and Keys  

             Html lists
             https://www.w3schools.com/HTML/html_lists.asp

             <ul>
                 <li>Coffee</li>
                 <li>Tea</li>
             </ul>				

             [1,2,3,4,5] = [2,4,6,8,10] => map 

              numbers.map()			 
           	  
			    const listItems = numbers.map((value) => 
				  <li>
					  {value * 2}
				  </li>
				);
				
				 <li> 
			  
			  We get this warning if we are not using the key props 
			  we can do operations based on index 
			  
			  what is the purpose of keys in list items?
			  
			  to uniquely identify an item in list 
			  if we dont give key all records are same 
			  
			  1. read the warning and there will use the index to map to resolve
			     the warning 
				 
			     <li key={0} > {1} </li>
				 <li key={1} > {2} </li>
				 <li key={2} > {3} </li>
				 <li key={3} > {4} </li>
				 <li key={4} > {5} </li>
				 
				 removing element 2 
				 1. remove the entry
				 2. re-indexing 
				 
				 only advantage is supressing the warning 
				 disadvantage is the performance will impact 
				 
				 <li key={123} > movie1 </li>
				 <li key={456} > movie2 </li>
				 <li key={789} > movie3 </li>
				 
				2. give the unique id which we get from api response data
				   best solution will help react to improve the performance 
				   
			Task: https://jsonplaceholder.typicode.com/posts 
			
			   const users = [{id:123,name:"kumar",email:"kumar@gmail.com",phone:876543210},
			                  {id:456,name:"nadiya",email:"nadiya@gmail.com",phone:876543210},
							  {id:789,name:"sireesha",email:"sireesha@gmail.com",phone:876543210}]
							  
		        Print the users list 
				
		------------------------31-05-2023------------------------------------------
		
		        React Hooks 
				
				Function Components -- static display :- header , footer 
				Class Components -- State and Life Cycle methods 
				
				Life Cycle Methods :
				
				function doSomething(){
				
				}
				doSomething()
				
				componentDidMount() => it will be called when it should be called only 
				React is going to call this!!!!
				
				3 phases in react class components 
				
				1. Mounting   => whenever component is loaded
				2. Updating   => update an action 
				3. UnMounting => remove component from dom 
				
				  componentDidMount()
				  
				  componentDidUpdate()
				  
				  componentWillUnmount()
				  
				  Hooks are functional components to use a state and life cycle methods 
				  
				  Hooks are functions that let you "hook into" react features like state
				  and life cycle methods from functional components 
				  
				  State => useState hook 
				  Life Cycle Methods => useEffect 
				  
				  1. First rule  of react hook 
				     the name of the hooks should be started with the "use"
					 
					 "use" react will understand as hook 
					 
					useState hook 
					
					const [a,b] = [10,20]; // a = 10,b=20
					
					useState(" initial value of the state or props value ") 
					
					props => birthYear , age 
					 state => age 
					 
					const arrayRef = useState(0);
					
					useState will always return an array reference 
					
					State cannot be modified directly 
					 
    				through useState hook only we can modify the state
					
	--------------------------01-06-2023-----------------------------------
					
					const [variable,setVariable] = useState(0);
					
	variable = 1;
					
    const [count,setSum] = useState(0);
	const [count,setCount] = useState(0);
	
	If no initial value is provided it is taken as undefined
	state variable 
	
	1. State Changes (dont mutate the state directly )
	    setCount(count + 1);
	2. Everytime when we update the state variables , the component will be re-rendered
	   again ,if we directly change react has no idea to re-render again 
	3. State changes are async and scheduled 
	4. State results with older state value 
	   setCount((prevCount) => prevCount+1);   
       setCount((prevCount) => prevCount+1);
	   
	 https://www.w3schools.com/html/html_form_input_types.asp
	 
					 
				  
				  
				  
				  
				  
				  
				
				
				
		
		       
			  
			 
			   
			 
			 
			 
			 
			  
			
			
			
			
			
			
			
			
			
			
			
			 
	          
			  
			  
			  
			  

    
			 
			  
			  
			      



         			
                		  
	 
	 
		
		
 
    

    

    

   




























 
    


  
























